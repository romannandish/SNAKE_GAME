// declaring Constants and variables
let inputDir= { x:0 , y:0};
const foodSound=new Audio('food.mp3');
const gameOverSound=new Audio('gameover.mp3');
const music=new Audio('music.mp3');
const moveSound=new Audio('move.mp3');
const board = document.querySelector('.board'); 
let score=0;
let speed=4;
let lastPaintTime=0;
let snakeArr=[
    {x:13, y:12}
];
let food={ x:2, y:4};
//Game Functions

function main(ctime)
{
    window.requestAnimationFrame(main);
    if((ctime-lastPaintTime)/1000< (1/speed))
    {
        return;
    }
        lastPaintTime=ctime;
        gameEngine();
}

function isCollide(snake)
{
    //if you bumpminto yourself
   for(let i=1;i< snakeArr.length;i++)
   {
    if(snake[i].x===snake[0].x && snake[i].y===snake[0].y)
    {
        return true;
    }
   }

//if you bumb into wall
if(snake[0].x>=18 || snake[0].x<=0 || snake[0].y>=18 || snake[0].y<=0)
{
    return true;
}
return false;
}


function gameEngine()
{
    //part1: Updating the snake array and food
     if(isCollide(snakeArr))
     {
        gameOverSound.play();
        music.pause();
        inputDir={x:0 ,y:0};
        alert("Game over!, press any key to play again");
        snakeArr=[ {x:13, y:12}];
       
        music.play();
      
        score=0;
     }

     //eat the food ,increment the score and regenerate food

     if(snakeArr[0].x===food.x && snakeArr[0].y===food.y)
     {
        foodSound.play();
        snakeArr.unshift({ x:snakeArr[0].x + inputDir.x , y:snakeArr[0].y + inputDir.y});
        let a=0;
        let b=16;
        food={x:Math.round(a+(b-a)*Math.random()),  y:Math.round(a+(b-a)*Math.random())};
     }


     //Moving the Array

      for(let i=snakeArr.length-2;i>=0;i--)
      {
        snakeArr[i+1]={...snakeArr[i]};
      }

      snakeArr[0].x+= inputDir.x;
      snakeArr[0].y+=inputDir.y;








    //Part2 : Display the snake and food
    //display the snake
    board.innerHTML="";
    snakeArr.forEach((e,index)=>
    {
        snakeElement=document.createElement('div');
        snakeElement.style.gridRowStart= e.y;
        snakeElement.style.gridColumnStart=e.x;
        if(index===0)
        {
         snakeElement.classList.add('head');
        }
        else
        {
            snakeElement.classList.add('snake');
        }
        board.appendChild(snakeElement);
    })

    //display the food
    snakeArr.forEach((e,index)=>
        {
            foodElement=document.createElement('div');
            foodElement.style.gridRowStart= food.y;
            foodElement.style.gridColumnStart=food.x;
            foodElement.classList.add('food');
            board.appendChild(foodElement);
        })
}






//Main logic Starts Here

window.requestAnimationFrame(main);
window.addEventListener("keydown",(e)=>
{
    inputDir={x:0,y:1};
    moveSound.play();
    music.play();
    
    switch (e.key) {
        case "ArrowUp":
            inputDir.x=0 ;
            inputDir.y= -1 ;
            break;

            case "ArrowDown":
            inputDir.x= 0;
            inputDir.y= 1 ;
            break;

            case "ArrowRight":
            inputDir.x=1 ;
            inputDir.y=0  ;
            break;

            case "ArrowLeft":
            inputDir.x= -1;
            inputDir.y=  0;
            break;
    
        default:
            break;
    }
})
